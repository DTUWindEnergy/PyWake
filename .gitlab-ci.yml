# ===== DEFINE DEFAULT DOCKER IMAGE =====
# dockerhub image generated using docker/Dockerfile_simple
image: continuumio/anaconda3:latest


# ===== TEST PyWake debian=====
test_PyWake:  # name the job what we like
  stage:  # build, test, deploy defined by default [2]
    test
  script:
  - pip install -e .
  - py.test
  tags:  # only runners with this tag can do the job [3]
  - python
  except:
  - test_pypi

  
# ===== Check code style =====
check_code_style:  # name the job what we like
  stage:  # build, test, deploy defined by default [2]
    test
  script:
  - pip install -e .
  - pycodestyle --ignore=E501,W504 py_wake
  tags:  # only runners with this tag can do the job [3]
  - python
  except:
  - test_pypi

# ===== TEST PyWake on Windows =====
test_PyWake_windows:  # name the job what we like
  stage:  # build, test, deploy defined by default [2]
    test
  script:  # runs on windows machine due to tag below
  - c:/Anaconda3/envs/pyTopfarm/python.exe -m pytest --cov-report term-missing:skip-covered --cov=py_wake --cov-config .coveragerc
  tags:  # tag for shared runner on windows machine
  - CPAV_old_PC
  except:
  - test_pypi

image: dtuwindenergy/topfarm2:latest

# ===== build documentation =====
pages:  # "pages" is a job specifically for GitLab pages [1]
  stage:  # build, test, deploy defined by default [2]
    deploy
  script:  # use sphinx to build docs, move to public page
  - cd docs; make html
  - cd ../; mv docs/build/html public/
  artifacts:  # required for GitLab pages [1]
    paths:
    - public
  only:  # only run for these branches
  - master
  - test_docs
  tags:  # only runners with this tag can do the job [3]
  - python
  except:
  - test_pypi
  
pypi_linux:
  stage:  
    deploy
  only:
    - tags
    - test_pypi
  script:
    - apt-get update
    - python3 -c 'from git_utils import get_tag; get_tag(verbose=True)'
    - pip install -e . --upgrade
    #- python3 -c 'from git_utils import write_vers; write_vers("py_wake/__init__.py")'
    - python3 -m pip install -U setuptools wheel
    - python3 setup.py sdist bdist_wheel
    - python3 -m pip install -U twine
    - python3 -c 'from git_utils import rename_dist_file; rename_dist_file()'
    #- twine upload dist/* -u $TWINE_USERNAME -p $TWINE_PASSWORD
    - twine upload --repository-url https://test.pypi.org/legacy/ dist/* -u $TWINE_USERNAME -p $TWINE_PASSWORD # for testing purposes
  tags:  
    - python

pypi_windows:
  stage:  
    deploy
  only:
    - tags
    - test_pypi
  script:
    #- c:/Anaconda3/envs/pyTopfarm/python.exe -c "from git_utils import write_vers; write_vers("py_wake/__init__.py")"
    - c:/Anaconda3/envs/pyTopfarm/python.exe setup.py bdist_wheel
    #- twine upload dist/* -u %TWINE_USERNAME% -p %TWINE_PASSWORD%
    - twine upload --repository-url https://test.pypi.org/legacy/ dist/* -u %TWINE_USERNAME% -p %TWINE_PASSWORD% # for testing purposes
  tags:  
    - CPAV_old_PC

